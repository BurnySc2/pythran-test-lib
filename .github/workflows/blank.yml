name: Pythran Compile

on: [push]

jobs:
  build:
    name: Test
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
#        os: [macos-latest, windows-latest]
#        os: [macos-latest, windows-latest, ubuntu-latest]
        os: [windows-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]
    
    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v1
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - uses: actions/cache@v1
      if: startsWith(runner.os, 'Windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Pip install requirements
      run: |
        pip install -r requirements.txt

    - name: Compile script using pythran
      run: |
        pythran test_lib.py

    - name: Move to subfolder 'artifacts'
      if: startsWith(runner.os, 'Linux')
      run: |
        mkdir artifacts
        ls
        mv *.so artifacts/*

    - name: Move to subfolder 'artifacts'
      if: startsWith(runner.os, 'Windows')
      run: |
        mkdir artifacts
        ls
        mv "*.pyd" "artifacts"

    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: Pythran_artifact_${{ matrix.python-version }}_${{ matrix.os }}
        path: artifacts
